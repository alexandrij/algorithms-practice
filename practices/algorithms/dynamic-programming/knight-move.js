// Дана прямоугольная доска N×M (N строк и M столбцов). В левом верхнем углу находится шахматный конь,
// которого необходимо переместить в правый нижний угол доски. В данной задаче конь может перемещаться
// на две клетки вниз и одну клетку вправо или на одну клетку вниз и две клетки вправо.
//
// Необходимо определить, сколько существует различных маршрутов, ведущих из левого верхнего в правый нижний угол.

const knightMove = (n, m) => {
  const lenN = n + 2;
  const lenM = m + 2;

  const matrixSum = new Array(lenN);
  for (let i = 0; i < lenN; i++) {
    matrixSum[i] = new Array(lenM);

    for (let j = 0; j < lenM; j++) {
      matrixSum[i][j] = 0;
    }
  }

  matrixSum[2][2] = 1;

  for (let i = 2; i < lenN; i++) {
    for (let j = 2; j < lenM; j++) {
      matrixSum[i][j] += matrixSum[i - 1][j - 2];
      matrixSum[i][j] += matrixSum[i - 2][j - 1];
    }
  }

  return matrixSum[lenN - 1][lenM - 1];
};

//
// 0 | 0 | 0;
// 0 | 0 | 1;
//
// 0 | 0 | 0;
// 0 | 0 | 1;
// 0 | 1 | 0;
// 0 | 0 | 0;
// 0 | 0 | 1;
//
// 0 | 0 | 0 | 0 | 0;
// 0 | 0 | 1 | 0 | 0;
// 0 | 1 | 0 | 0 | 1;
// 0 | 0 | 0 | 2 | 0;
// 0 | 0 | 1 | 0 | 0;
//
// 0 | 0 | 0 | 0 | 0 | 0;
// 0 | 0 | 1 | 0 | 0 | 0;
// 0 | 1 | 0 | 0 | 1 | 0;
// 0 | 0 | 0 | 2 | 0 | 0;
// 0 | 0 | 1 | 0 | 0 | 3;

console.debug(knightMove(3, 2)); // 1
console.debug(knightMove(3, 3)); // 0
console.debug(knightMove(31, 34)); // 293930
